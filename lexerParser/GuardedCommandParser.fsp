%{
open Defines
%}

%token EOF
%token <int> INT
%token <string> VAR
%token GT LT GEQ LEQ EQ NEQ
%token IF FI DO OD LOOP POOL DECL PAR RAP SKIP CRIT TRUE FALSE
%token PL MI MLT DIV MOD
%token LAND LOR
%token ASSIGN
%token CON SEQ
%token SEND RECV IMP RB LB NOT LP RP

%left SEQ opa opb a b PL MI
%right DIV MLT MOD
%nonassoc NOT

// start
%start start
%type <Defines.tree> start

%%

start:
    | p EOF             { $1 }
    | c EOF             { $1 }

p:
    | PAR cp RAP        { Node(P,[$2]) }

cp:
    | d SEQ c           { Node(Seq,[$1;$3]) }
    | c                 { $1 }
    | cp CON cp         { Node(Cp,[$1; $3])}

d:
    | DECL x            {Node(Decl,[$2])}
    | DECL arr LB a RB  {Node(Decl,[Node(A($2),[$4])])}
    | d SEQ d           {Node(Seq,[$1;$3])}

c:
    | c SEQ c               { Node(Seq,[$1;$3]) }
    | ch SEND a             { Node(Send,[$1;$3]) }
    | ch RECV x             { Node(Recv,[$1;$3]) }
    | ch RECV arr LB a RB   { Node(Recv,[$1;Node(A($3),[$5])]) }
    | x ASSIGN a            { Node(Assign,[$1; $3]) }
    | arr LB a RB ASSIGN a  { Node(Assign,[Node(A($1),[$3]); $6]) }
    | SKIP                  { Node(Skip,[]) }
    | CRIT                  { Node(Crit,[]) }
    | IF cg FI              { Node(If,[$2]) }
    | LOOP c POOL          { Node(Loop,[$2]) }
    | DO gc OD              { Node(Do,[$2]) }

gc:
    | b IMP c           { Node(Guard,[$1;$3])}
    | gc CON gc         { Node(Gc,[$1;$3]) }

cg:
    | gc                { $1 }
    | ch SEND a IMP c   { Node(Guard,[Node(Send,[$1;$3]);$5]) }
    | ch RECV x IMP c   { Node(Guard,[Node(Recv,[$1;$3]);$5]) }

a:
    | n                 { $1 }
    | x                 { $1 }
    | arr LB a RB       { Node(A($1),[$3]) }
    | a opa a           { Node($2,[$1;$3]) }
    | LP a RP           { $2 }

b:
    | TRUE               { Node(True,[]) }
    | FALSE              { Node(False,[]) }
    | a opr a            { Node($2,[$1;$3]) }
    | b opb b %prec NOT  { Node($2,[$1;$3]) }
    | NOT b              { Node(Not,[$2]) }
    | LP b RP            { $2 }

opa:
    | PL {Pl} | MI {Mi} | MLT {Mlt} | DIV {Div} | MOD {Mod}

opr:
    | GT {Gt} | LT {Lt} | GEQ {Geq} | LEQ {Leq} | EQ {Eq} | NEQ {Neq}

opb:
    | LAND {Land} | LOR {Lor}

n:
    | INT   { (Node(N($1),[])) }

x:
    | VAR   { (Node(X($1),[])) }

arr:
    | VAR   { $1 }

ch:
    | VAR   { Node(C($1),[]) }

%%
